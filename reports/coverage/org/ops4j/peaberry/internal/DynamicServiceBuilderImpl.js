var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = { "classes" : [
    {"id" : 0, "sl" : 42, "el" : 138, "name" : "DynamicServiceBuilderImpl",
    "methods" : [
              {"sl" : 56, "el" : 58, "sc" : 3},  {"sl" : 60, "el" : 63, "sc" : 3},  {"sl" : 65, "el" : 68, "sc" : 3},  {"sl" : 70, "el" : 78, "sc" : 3},  {"sl" : 80, "el" : 83, "sc" : 3},  {"sl" : 85, "el" : 103, "sc" : 3},  {"sl" : 91, "el" : 101, "sc" : 7},  {"sl" : 105, "el" : 123, "sc" : 3},  {"sl" : 111, "el" : 121, "sc" : 7},  {"sl" : 125, "el" : 130, "sc" : 3},  {"sl" : 132, "el" : 137, "sc" : 3}  ]}
    
 ]
};

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {
		"test_11" : {
					  "name" : "brokenServices",
					  "pass" : true,
					  "methods" : [{"sl": 111 },{"sl": 125 },{"sl": 132 },],
					  "statements" : [{"sl": 113 },{"sl": 114 },{"sl": 116 },{"sl": 117 },{"sl": 126 },{"sl": 127 },{"sl": 133 },{"sl": 136 },]
					  },
		"test_6" : {
					  "name" : "testWiring",
					  "pass" : true,
					  "methods" : [{"sl": 91 },{"sl": 111 },{"sl": 125 },{"sl": 132 },],
					  "statements" : [{"sl": 93 },{"sl": 94 },{"sl": 96 },{"sl": 97 },{"sl": 113 },{"sl": 114 },{"sl": 116 },{"sl": 117 },{"sl": 126 },{"sl": 129 },{"sl": 133 },{"sl": 136 },]
					  }
 };

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [  [],   [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [ 6   ] ,
  [  ] ,
  [ 6   ] ,
  [ 6   ] ,
  [  ] ,
  [ 6   ] ,
  [ 6   ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [ 6 , 11   ] ,
  [  ] ,
  [ 6 , 11   ] ,
  [ 6 , 11   ] ,
  [  ] ,
  [ 6 , 11   ] ,
  [ 6 , 11   ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [ 6 , 11   ] ,
  [ 6 , 11   ] ,
  [ 11   ] ,
  [  ] ,
  [ 6   ] ,
  [  ] ,
  [  ] ,
  [ 6 , 11   ] ,
  [ 6 , 11   ] ,
  [  ] ,
  [  ] ,
  [ 6 , 11   ] ,
  [  ] ,
  [  ] 
];
