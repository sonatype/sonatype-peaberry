var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = { "classes" : [
    {"id" : 390, "sl" : 49, "el" : 178, "name" : "ServiceScopingTests",
    "methods" : [
             {"sl" : 51, "el" : 67, "sc" : 3},  {"sl" : 156, "el" : 177, "sc" : 3}  ]}
    ,
    {"id" : 398, "sl" : 69, "el" : 105, "name" : "ServiceScopingTests.CountingRegistryProvider",
    "methods" : [
             {"sl" : 79, "el" : 104, "sc" : 5},  {"sl" : 83, "el" : 96, "sc" : 9},  {"sl" : 90, "el" : 94, "sc" : 13},  {"sl" : 98, "el" : 102, "sc" : 9}  ]}
    ,
    {"id" : 411, "sl" : 107, "el" : 122, "name" : "ServiceScopingTests.CountingServiceProvider",
    "methods" : [
             {"sl" : 110, "el" : 121, "sc" : 5},  {"sl" : 112, "el" : 119, "sc" : 9}  ]}
    ,
    {"id" : 418, "sl" : 124, "el" : 144, "name" : "ServiceScopingTests.BlankRegistry",
    "methods" : [
              {"sl" : 128, "el" : 130, "sc" : 7},  {"sl" : 132, "el" : 132, "sc" : 7},  {"sl" : 135, "el" : 138, "sc" : 5},  {"sl" : 140, "el" : 143, "sc" : 5}  ]}
    
 ]
};

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {
		"test_1" : {
					  "name" : "checkScoping",
					  "pass" : true,
					  "methods" : [{"sl": 79 },{"sl": 90 },{"sl": 98 },{"sl": 110 },{"sl": 112 },{"sl": 128 },{"sl": 132 },{"sl": 156 },],
					  "statements" : [{"sl": 80 },{"sl": 81 },{"sl": 92 },{"sl": 93 },{"sl": 100 },{"sl": 101 },{"sl": 111 },{"sl": 114 },{"sl": 115 },{"sl": 116 },{"sl": 118 },{"sl": 129 },{"sl": 158 },{"sl": 161 },{"sl": 162 },{"sl": 164 },{"sl": 166 },{"sl": 168 },{"sl": 169 },{"sl": 171 },{"sl": 173 },{"sl": 174 },]
					  }
 };

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [  [],   [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [ 1   ] ,
  [ 1   ] ,
  [ 1   ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [ 1   ] ,
  [  ] ,
  [ 1   ] ,
  [ 1   ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [ 1   ] ,
  [  ] ,
  [ 1   ] ,
  [ 1   ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [ 1   ] ,
  [ 1   ] ,
  [ 1   ] ,
  [  ] ,
  [ 1   ] ,
  [ 1   ] ,
  [ 1   ] ,
  [  ] ,
  [ 1   ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [ 1   ] ,
  [ 1   ] ,
  [  ] ,
  [  ] ,
  [ 1   ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [ 1   ] ,
  [  ] ,
  [ 1   ] ,
  [  ] ,
  [  ] ,
  [ 1   ] ,
  [ 1   ] ,
  [  ] ,
  [ 1   ] ,
  [  ] ,
  [ 1   ] ,
  [  ] ,
  [ 1   ] ,
  [ 1   ] ,
  [  ] ,
  [ 1   ] ,
  [  ] ,
  [ 1   ] ,
  [ 1   ] ,
  [  ] ,
  [  ] ,
  [  ] ,
  [  ] 
];
